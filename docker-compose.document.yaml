services:
  maildev:
    build:
      context: .
      dockerfile: maildev.Dockerfile
    ports:
      - ${MAIL_CLIENT_PORT}:1080
      - ${MAIL_PORT}:1025

  mongo:
    image: mongo:8.0.11
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ai-ecommerce-mongo-db:/data/db
    ports:
      - ${DATABASE_PORT}:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${DATABASE_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${DATABASE_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@mongo:${DATABASE_PORT}/

  # Uncomment to use redis
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - 6379:6379

  # Weaviate Vector Database with text2vec-transformers
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.25.0
    restart: always
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-transformers'
      ENABLE_MODULES: 'text2vec-transformers'
      TRANSFORMERS_INFERENCE_API: 'http://t2v-transformers:8080'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - ai-ecommerce-weaviate-data:/var/lib/weaviate
    depends_on:
      - t2v-transformers
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8080/v1/.well-known/live',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 90s

  # Text2vec-transformers inference service
  t2v-transformers:
    image: cr.weaviate.io/semitechnologies/transformers-inference:sentence-transformers-all-MiniLM-L6-v2
    restart: always
    environment:
      ENABLE_CUDA: '0'  # Set to '1' if you have NVIDIA GPU support
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/.well-known/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Neo4j Graph Database - Minimal Configuration
  neo4j:
    image: neo4j:5.24-community
    restart: always
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_server_config_strict__validation_enabled: 'false'
      NEO4J_server_memory_heap_initial__size: 128M
      NEO4J_server_memory_heap_max__size: 256M
      NEO4J_server_memory_pagecache_size: 64M
    volumes:
      - ai-ecommerce-neo4j-data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "--username", "neo4j", "--password", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  api:
    build:
      context: .
      dockerfile: document.Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - mongo
      - weaviate
      - neo4j

volumes:
  ai-ecommerce-mongo-db:
  ai-ecommerce-weaviate-data:
  ai-ecommerce-neo4j-data:
  ai-ecommerce-neo4j-plugins: